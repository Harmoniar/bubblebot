# Generated by Django 3.2.13 on 2022-08-06 18:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Components',
            fields=[
                ('component_id', models.CharField(max_length=64, primary_key=True, serialize=False, verbose_name='组件ID')),
                ('component_role', models.IntegerField(choices=[(1, 'Receiver'), (2, 'Processor'), (3, 'Transmitter')], default=1, verbose_name='组件角色')),
                ('component_ip', models.CharField(max_length=16, verbose_name='组件IP')),
                ('component_status', models.IntegerField(choices=[(0, '离线中'), (1, '运行中')], verbose_name='组件状态')),
                ('last_report_time', models.DateTimeField(null=True, verbose_name='最近运行时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name_plural': '机器人组件表',
                'db_table': 'robot_component',
            },
        ),
        migrations.CreateModel(
            name='Functions',
            fields=[
                ('function_id', models.CharField(max_length=32, primary_key=True, serialize=False, verbose_name='功能ID')),
                ('function_name', models.CharField(max_length=32, verbose_name='功能名称')),
                ('function_url', models.CharField(max_length=255, verbose_name='功能路径')),
                ('function_class', models.CharField(max_length=32, null=True, verbose_name='功能分类')),
                ('global_function_status', models.IntegerField(choices=[(0, '停用'), (1, '启用')], default=1, verbose_name='功能状态')),
                ('default_trigger_command', models.JSONField(null=True, verbose_name='默认前缀触发使用的命令: List[str]')),
                ('default_command_args', models.JSONField(null=True, verbose_name='默认触发命令的参数: List[Dict]')),
                ('default_trigger_template', models.JSONField(null=True, verbose_name='默认触发模板: Dict')),
                ('default_exception_template', models.JSONField(null=True, verbose_name='默认排除模板: Dict')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('comment', models.CharField(max_length=2048, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name_plural': '机器人功能表',
                'db_table': 'functions',
            },
        ),
        migrations.CreateModel(
            name='RobotMeta',
            fields=[
                ('key', models.CharField(max_length=32, primary_key=True, serialize=False, verbose_name='元数据名')),
                ('value', models.CharField(max_length=8192, verbose_name='元数据值')),
            ],
            options={
                'verbose_name_plural': '机器人相关数据表',
                'db_table': 'robot_meta',
            },
        ),
        migrations.CreateModel(
            name='Robots',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('robot_id', models.BigIntegerField(unique=True, verbose_name='机器人QQID')),
                ('robot_name', models.CharField(max_length=32, verbose_name='机器人名称')),
                ('master_id', models.JSONField(verbose_name='机器人管理员QQID: List[int]')),
                ('robot_status', models.IntegerField(choices=[(0, '停用'), (1, '启用')], default=0, verbose_name='机器人状态')),
                ('run_time', models.DateTimeField(null=True, verbose_name='运行时间: 如果机器人没有运行则为空')),
                ('protocol_server_mode', models.IntegerField(choices=[(0, '-'), (1, 'GO-CQHTTP')], default=0, null=True, verbose_name='机器人服务端类型')),
                ('protocol_server_config', models.JSONField(verbose_name='机器人服务端配置: Dict')),
                ('listen_msg_type', models.JSONField(verbose_name='机器人监听的消息类型: List[int]')),
                ('trigger_mode', models.JSONField(verbose_name='机器人触发方式: List[int]')),
                ('command_prefix', models.JSONField(verbose_name='前缀触发命令的前缀: List[str]')),
                ('user_function_permit', models.JSONField(verbose_name='用户功能权限: List[str]')),
                ('group_permit_mode', models.IntegerField(choices=[(1, '白名单模式'), (2, '黑名单模式')], default=1, verbose_name='群权限管理模式')),
                ('group_whitelist', models.JSONField(verbose_name='群白名单:List[int]')),
                ('group_blacklist', models.JSONField(verbose_name='群黑名单: List[int]')),
                ('user_blacklist', models.JSONField(verbose_name='用户黑名单: List[int]')),
                ('comment', models.CharField(max_length=2048, null=True, verbose_name='备注')),
                ('admin_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, to_field='email')),
            ],
            options={
                'verbose_name_plural': '机器人表',
                'db_table': 'robots',
                'unique_together': {('admin_user', 'robot_id')},
            },
        ),
        migrations.CreateModel(
            name='Robot2Function',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('function_status', models.IntegerField(choices=[(0, '停用'), (1, '启用')], default=1, verbose_name='功能状态')),
                ('trigger_command', models.JSONField(null=True, verbose_name='前缀触发使用的命令: List[str]')),
                ('command_args', models.JSONField(null=True, verbose_name='触发命令的参数: List[Dict]')),
                ('trigger_template', models.JSONField(null=True, verbose_name='触发模板: Dict')),
                ('exception_template', models.JSONField(null=True, verbose_name='排除模板: Dict')),
                ('admin_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, to_field='email')),
                ('function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='robot.functions')),
                ('robot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='robot.robots', to_field='robot_id')),
            ],
            options={
                'verbose_name_plural': '机器人与功能关系表',
                'db_table': 'robot2function',
                'unique_together': {('admin_user_id', 'robot_id', 'function_id')},
            },
        ),
    ]
